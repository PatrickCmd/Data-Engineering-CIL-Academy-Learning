AWSTemplateFormatVersion: "2010-09-09"  
Description: workload deployment pipelines template

Parameters: 
  ProjectName:  
    Description: Give the project a name. E.g test-project #Do not use an underscore(_) in the name.
    Type: String  

  GithubRepo:
    Description: Specify the repo you want to use as source
    Type: String
  
  GithubUsername:
    Description: Enter your github username
    Type: String
  
  GithubAccessToken: 
    Description: Enter the personal-user-token you generated from github
    Type: String
    NoEcho: true
     
Resources:
  ArtifactBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${ProjectName}-artifact-bucket

  WebsiteBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${ProjectName}-website-bucket
      PublicAccessBlockConfiguration:
         BlockPublicAcls: false
         BlockPublicPolicy: false
         IgnorePublicAcls: false
         RestrictPublicBuckets: false
      WebsiteConfiguration: 
         ErrorDocument: index.html
         IndexDocument: index.html
    
  WebsiteBucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref WebsiteBucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal: '*'
            Action: 's3:GetObject'
            Resource: !Join ['', ["arn:aws:s3:::", !Ref WebsiteBucket, "/*"]]

  # Repository:   
  #   Type: "AWS::CodeCommit::Repository"
  #   DependsOn: SNSRepoTrigger
  #   Properties:
  #     RepositoryName: !Sub ${ProjectName}
  #     Triggers:
  #     - Name: MasterTrigger
  #       CustomData: !Ref "AWS::StackName"
  #       DestinationArn: !Ref SNSRepoTrigger
  #       Branches:
  #       - main
  #       Events:
  #       - all

  # SNSRepoTrigger:
  #   Type: "AWS::SNS::Topic"
  #   Properties:
  #     DisplayName: !Ref ProjectName
  #     TopicName: !Ref ProjectName

  PipelineRole:  
    Type: AWS::IAM::Role  
    Properties:  
      RoleName: !Sub ${ProjectName}-pipeline-role  
      AssumeRolePolicyDocument:  
        Version: "2012-10-17"  
        Statement:  
          Effect: Allow  
          Principal:  
            Service: 
              - codepipeline.amazonaws.com  
          Action: "sts:AssumeRole"  
      Path: /  
      Policies:  
      -
        PolicyName: ArtifactAccess
        PolicyDocument:  
          Version: '2012-10-17'  
          Statement:  
          -   
            Action:  
              - 's3:GetObject'  
              - 's3:GetObjectVersion'  
              - 's3:GetBucketVersioning'  
              - 's3:PutObject'  
            Effect: Allow  
            Resource:   
              - !Join ['',['arn:aws:s3:::', !Ref ArtifactBucket ]]
              - !Join ['',['arn:aws:s3:::', !Ref ArtifactBucket , '/*']]
      -
        PolicyName: CloudwatchLogs
        PolicyDocument:  
          Version: '2012-10-17'  
          Statement:  
          -   
            Action:  
              - 'cloudwatch:*' 
            Effect: Allow  
            Resource:   
              - "*"
 
      -   
        PolicyName: GitAccess  
        PolicyDocument:  
          Version: '2012-10-17'  
          Statement:  
          -  
            Effect: Allow  
            Action:  
              - codecommit:Get*  
              - codecommit:List*  
              - codecommit:GitPull  
              - codecommit:BatchGetRepositories  
              - codecommit:CancelUploadArchive  
              - codecommit:UploadArchive  
            Resource: "*"  
      -
        PolicyName: CodeBuildAccess  
        PolicyDocument:  
          Version: '2012-10-17'  
          Statement:  
          -   
            Action:  
              - 'codebuild:StartBuild'  
              - 'codebuild:StopBuild'  
              - 'codebuild:BatchGetBuilds'  
            Effect: Allow  
            Resource:  
              - !GetAtt DeployBuild.Arn

  CodeBuildRole:  
    Type: AWS::IAM::Role  
    Properties:  
      RoleName: !Sub "${ProjectName}-codebuild-role"  
      AssumeRolePolicyDocument:  
        Version: 2012-10-17
        Statement:  
          Effect: Allow  
          Principal:  
            Service: 
              - codebuild.amazonaws.com
          Action: "sts:AssumeRole"
      Policies:   
        -   
          PolicyName: "CodebuildAccess"  
          PolicyDocument:   
            Version: "2012-10-17"  
            Statement:   
              -   
                Effect: "Allow"  
                Action:                     
                  - "s3:*"
                  - "logs:*"
                Resource: "*"  
   
  DeployBuild:  
    Type: AWS::CodeBuild::Project  
    Properties:  
      Name: !Sub ${ProjectName}-Deploy  
      ServiceRole: !Ref CodeBuildRole
      Artifacts:  
        Type: CODEPIPELINE  
      Environment:  
        ComputeType: BUILD_GENERAL1_LARGE 
        Image: aws/codebuild/standard:5.0
        Type: LINUX_CONTAINER
        EnvironmentVariables:  
          - Name: WEBSITE_BUCKET_NAME  
            Value: !Ref WebsiteBucket 
      Source:  
        Type: CODEPIPELINE  
        BuildSpec: buildspec.yml

  CodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Sub ${ProjectName}-pipeline
      RoleArn: !GetAtt PipelineRole.Arn  
      ArtifactStore:  
        Type: S3
        Location: !Ref ArtifactBucket
      Stages:  
        - Name: GithubSource  
          Actions:  
            - InputArtifacts: []  
              Name: code  
              RunOrder: 1  
              ActionTypeId:  
                Category: Source  
                Owner: ThirdParty  
                Version: 1  
                Provider: GitHub  
              OutputArtifacts:  
                - Name: CodeWorkspace  
              Configuration:  
                Owner: !Ref GithubUsername
                Repo: !Ref GithubRepo
                OAuthToken: !Ref GithubAccessToken
                Branch: main  

        # - Name: CodeCommitSource  
        #   Actions:  
        #     - InputArtifacts: []  
        #       Name: code  
        #       RunOrder: 1  
        #       ActionTypeId:  
        #         Category: Source  
        #         Owner: AWS  
        #         Version: 1  
        #         Provider: CodeCommit  
        #       OutputArtifacts:  
        #         - Name: CodeWorkspace  
        #       Configuration:  
        #         RepositoryName: !Sub ${ProjectName}-Repo
        #         BranchName: main  
        #         PollForSourceChanges: "true"             
                
        - Name: DEVELOP
          Actions:  
            - Name: deploy-to-s3 
              RunOrder: 5
              ActionTypeId:  
                Category: Build  
                Owner: AWS  
                Version: '1'  
                Provider: CodeBuild  
              InputArtifacts:  
                - Name: CodeWorkspace  
              Configuration:  
                ProjectName: !Ref DeployBuild 